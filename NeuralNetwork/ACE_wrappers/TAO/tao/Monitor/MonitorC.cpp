// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:366


#include "tao/Monitor/Monitor.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "MonitorC.inl"
#endif /* !defined INLINE */

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:48

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for Monitor::Subscriber.

Monitor::Subscriber_ptr
TAO::Objref_Traits<Monitor::Subscriber>::duplicate (
    Monitor::Subscriber_ptr p)
{
  return Monitor::Subscriber::_duplicate (p);
}

void
TAO::Objref_Traits<Monitor::Subscriber>::release (
    Monitor::Subscriber_ptr p)
{
  ::CORBA::release (p);
}

Monitor::Subscriber_ptr
TAO::Objref_Traits<Monitor::Subscriber>::nil (void)
{
  return Monitor::Subscriber::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Monitor::Subscriber>::marshal (
    const Monitor::Subscriber_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

void
Monitor::Subscriber::push (
  const ::Monitor::DataList & dil)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Monitor::DataList>::in_arg_val _tao_dil (dil);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_dil
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "push",
      4,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_ONEWAY_INVOCATION
      
    );

  _tao_call.invoke (0, 0);
}

Monitor::Subscriber::Subscriber (void)
{
}

Monitor::Subscriber::~Subscriber (void)
{
}

Monitor::Subscriber_ptr
Monitor::Subscriber::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Subscriber>::narrow (
        _tao_objref,
        "IDL:Monitor/Subscriber:1.0");
}

Monitor::Subscriber_ptr
Monitor::Subscriber::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Subscriber>::unchecked_narrow (
        _tao_objref);
}

Monitor::Subscriber_ptr
Monitor::Subscriber::_nil (void)
{
  return 0;
}

Monitor::Subscriber_ptr
Monitor::Subscriber::_duplicate (Subscriber_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Monitor::Subscriber::_tao_release (Subscriber_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Monitor::Subscriber::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:Monitor/Subscriber:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Monitor::Subscriber::_interface_repository_id (void) const
{
  return "IDL:Monitor/Subscriber:1.0";
}

::CORBA::Boolean
Monitor::Subscriber::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:48

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for Monitor::MC.

Monitor::MC_ptr
TAO::Objref_Traits<Monitor::MC>::duplicate (
    Monitor::MC_ptr p)
{
  return Monitor::MC::_duplicate (p);
}

void
TAO::Objref_Traits<Monitor::MC>::release (
    Monitor::MC_ptr p)
{
  ::CORBA::release (p);
}

Monitor::MC_ptr
TAO::Objref_Traits<Monitor::MC>::nil (void)
{
  return Monitor::MC::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Monitor::MC>::marshal (
    const Monitor::MC_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

::Monitor::NameList *
Monitor::MC::get_statistic_names (
  const char * filter)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Monitor::NameList>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_filter (filter);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_filter
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_statistic_names",
      19,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

::Monitor::DataList *
Monitor::MC::get_statistics (
  const ::Monitor::NameList & names)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Monitor::DataList>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Monitor::NameList>::in_arg_val _tao_names (names);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_names
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_statistics",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

::Monitor::DataList *
Monitor::MC::get_and_clear_statistics (
  const ::Monitor::NameList & names)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Monitor::DataList>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Monitor::NameList>::in_arg_val _tao_names (names);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_names
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_and_clear_statistics",
      24,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

::Monitor::NameList *
Monitor::MC::clear_statistics (
  const ::Monitor::NameList & names)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Monitor::NameList>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Monitor::NameList>::in_arg_val _tao_names (names);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_names
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "clear_statistics",
      16,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

::Monitor::ConstraintStructList *
Monitor::MC::register_constraint (
  const ::Monitor::NameList & names,
  const char * cs,
  ::Monitor::Subscriber_ptr sub)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Monitor::ConstraintStructList>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Monitor::NameList>::in_arg_val _tao_names (names);
  TAO::Arg_Traits< char *>::in_arg_val _tao_cs (cs);
  TAO::Arg_Traits< ::Monitor::Subscriber>::in_arg_val _tao_sub (sub);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_names,
      &_tao_cs,
      &_tao_sub
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "register_constraint",
      19,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:88

void
Monitor::MC::unregister_constraints (
  const ::Monitor::ConstraintStructList & constraint)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Monitor::ConstraintStructList>::in_arg_val _tao_constraint (constraint);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_constraint
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "unregister_constraints",
      22,
      TAO::TAO_CO_NONE | TAO::TAO_CO_DIRECT_STRATEGY | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

Monitor::MC::MC (void)
{
}

Monitor::MC::~MC (void)
{
}

Monitor::MC_ptr
Monitor::MC::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<MC>::narrow (
        _tao_objref,
        "IDL:Monitor/MC:1.0");
}

Monitor::MC_ptr
Monitor::MC::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<MC>::unchecked_narrow (
        _tao_objref);
}

Monitor::MC_ptr
Monitor::MC::_nil (void)
{
  return 0;
}

Monitor::MC_ptr
Monitor::MC::_duplicate (MC_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Monitor::MC::_tao_release (MC_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Monitor::MC::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:Monitor/MC:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Monitor::MC::_interface_repository_id (void) const
{
  return "IDL:Monitor/MC:1.0";
}

::CORBA::Boolean
Monitor::MC::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:51


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Monitor::Subscriber_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Monitor::Subscriber_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Monitor::Subscriber RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:51


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Monitor::MC_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Monitor::MC_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Monitor::MC RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL





TAO_END_VERSIONED_NAMESPACE_DECL


