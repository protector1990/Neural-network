// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:451

#ifndef _TAO_IDL_NOTIFY_MONITORCONTROLEXT_NOTIFYMONITORINGEXTS_V7UPGW_H_
#define _TAO_IDL_NOTIFY_MONITORCONTROLEXT_NOTIFYMONITORINGEXTS_V7UPGW_H_

#include /**/ "ace/pre.h"

#include "NotifyMonitoringExtC.h"
#include "orbsvcs/NotifyExtS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/TypeCode_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_NOTIFYMONITORINGEXT_SUPPLIERADMIN__SARG_TRAITS_)
#define _NOTIFYMONITORINGEXT_SUPPLIERADMIN__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::NotifyMonitoringExt::SupplierAdmin>
    : public
        Object_SArg_Traits_T<
            ::NotifyMonitoringExt::SupplierAdmin_ptr,
            ::NotifyMonitoringExt::SupplierAdmin_var,
            ::NotifyMonitoringExt::SupplierAdmin_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_NOTIFYMONITORINGEXT_CONSUMERADMIN__SARG_TRAITS_)
#define _NOTIFYMONITORINGEXT_CONSUMERADMIN__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::NotifyMonitoringExt::ConsumerAdmin>
    : public
        Object_SArg_Traits_T<
            ::NotifyMonitoringExt::ConsumerAdmin_ptr,
            ::NotifyMonitoringExt::ConsumerAdmin_var,
            ::NotifyMonitoringExt::ConsumerAdmin_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_NOTIFYMONITORINGEXT_EVENTCHANNEL__SARG_TRAITS_)
#define _NOTIFYMONITORINGEXT_EVENTCHANNEL__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::NotifyMonitoringExt::EventChannel>
    : public
        Object_SArg_Traits_T<
            ::NotifyMonitoringExt::EventChannel_ptr,
            ::NotifyMonitoringExt::EventChannel_var,
            ::NotifyMonitoringExt::EventChannel_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_NOTIFYMONITORINGEXT_EVENTCHANNELFACTORY__SARG_TRAITS_)
#define _NOTIFYMONITORINGEXT_EVENTCHANNELFACTORY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::NotifyMonitoringExt::EventChannelFactory>
    : public
        Object_SArg_Traits_T<
            ::NotifyMonitoringExt::EventChannelFactory_ptr,
            ::NotifyMonitoringExt::EventChannelFactory_var,
            ::NotifyMonitoringExt::EventChannelFactory_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_sh.cpp:35

namespace POA_NotifyMonitoringExt
{
  

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class SupplierAdmin;
  typedef SupplierAdmin *SupplierAdmin_ptr;

  class TAO_Notify_MC_Ext_Export SupplierAdmin
    : public virtual POA_NotifyExt::SupplierAdmin
  {
  protected:
    SupplierAdmin (void);
  
  public:
    /// Useful for template programming.
    typedef ::NotifyMonitoringExt::SupplierAdmin _stub_type;
    typedef ::NotifyMonitoringExt::SupplierAdmin_ptr _stub_ptr_type;
    typedef ::NotifyMonitoringExt::SupplierAdmin_var _stub_var_type;

    SupplierAdmin (const SupplierAdmin& rhs);
    virtual ~SupplierAdmin (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::NotifyMonitoringExt::SupplierAdmin *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual ::CosNotifyChannelAdmin::ProxyConsumer_ptr obtain_named_notification_push_consumer (
      ::CosNotifyChannelAdmin::ClientType ctype,
      ::CosNotifyChannelAdmin::ProxyID_out proxy_id,
      const char * name) = 0;

    static void obtain_named_notification_push_consumer_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class ConsumerAdmin;
  typedef ConsumerAdmin *ConsumerAdmin_ptr;

  class TAO_Notify_MC_Ext_Export ConsumerAdmin
    : public virtual POA_NotifyExt::ConsumerAdmin
  {
  protected:
    ConsumerAdmin (void);
  
  public:
    /// Useful for template programming.
    typedef ::NotifyMonitoringExt::ConsumerAdmin _stub_type;
    typedef ::NotifyMonitoringExt::ConsumerAdmin_ptr _stub_ptr_type;
    typedef ::NotifyMonitoringExt::ConsumerAdmin_var _stub_var_type;

    ConsumerAdmin (const ConsumerAdmin& rhs);
    virtual ~ConsumerAdmin (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::NotifyMonitoringExt::ConsumerAdmin *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual ::CosNotifyChannelAdmin::ProxySupplier_ptr obtain_named_notification_push_supplier (
      ::CosNotifyChannelAdmin::ClientType ctype,
      ::CosNotifyChannelAdmin::ProxyID_out proxy_id,
      const char * name) = 0;

    static void obtain_named_notification_push_supplier_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class EventChannel;
  typedef EventChannel *EventChannel_ptr;

  class TAO_Notify_MC_Ext_Export EventChannel
    : public virtual POA_CosNotifyChannelAdmin::EventChannel
  {
  protected:
    EventChannel (void);
  
  public:
    /// Useful for template programming.
    typedef ::NotifyMonitoringExt::EventChannel _stub_type;
    typedef ::NotifyMonitoringExt::EventChannel_ptr _stub_ptr_type;
    typedef ::NotifyMonitoringExt::EventChannel_var _stub_var_type;

    EventChannel (const EventChannel& rhs);
    virtual ~EventChannel (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::NotifyMonitoringExt::EventChannel *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual ::CosNotifyChannelAdmin::ConsumerAdmin_ptr named_new_for_consumers (
      ::CosNotifyChannelAdmin::InterFilterGroupOperator op,
      ::CosNotifyChannelAdmin::AdminID_out id,
      const char * name) = 0;

    static void named_new_for_consumers_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual ::CosNotifyChannelAdmin::SupplierAdmin_ptr named_new_for_suppliers (
      ::CosNotifyChannelAdmin::InterFilterGroupOperator op,
      ::CosNotifyChannelAdmin::AdminID_out id,
      const char * name) = 0;

    static void named_new_for_suppliers_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class EventChannelFactory;
  typedef EventChannelFactory *EventChannelFactory_ptr;

  class TAO_Notify_MC_Ext_Export EventChannelFactory
    : public virtual POA_NotifyExt::EventChannelFactory
  {
  protected:
    EventChannelFactory (void);
  
  public:
    /// Useful for template programming.
    typedef ::NotifyMonitoringExt::EventChannelFactory _stub_type;
    typedef ::NotifyMonitoringExt::EventChannelFactory_ptr _stub_ptr_type;
    typedef ::NotifyMonitoringExt::EventChannelFactory_var _stub_var_type;

    EventChannelFactory (const EventChannelFactory& rhs);
    virtual ~EventChannelFactory (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::NotifyMonitoringExt::EventChannelFactory *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual ::CosNotifyChannelAdmin::EventChannel_ptr create_named_channel (
      const ::CosNotification::QoSProperties & initial_qos,
      const ::CosNotification::AdminProperties & initial_admin,
      ::CosNotifyChannelAdmin::ChannelID_out id,
      const char * name) = 0;

    static void create_named_channel_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_sh.cpp:66

} // module NotifyMonitoringExt

#include /**/ "ace/post.h"

#endif /* ifndef */

