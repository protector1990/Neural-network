// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:451

#ifndef _TAO_IDL_FT_NAMINGREPLICATIONS_N2F8VN_H_
#define _TAO_IDL_FT_NAMINGREPLICATIONS_N2F8VN_H_

#include /**/ "ace/pre.h"

#include "FT_NamingReplicationC.h"
#include "orbsvcs/CosNamingS.h"
#include "orbsvcs/FT_NamingManagerS.h"
#include "orbsvcs/FT_CORBA_ORBS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Any_SArg_Traits.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:306

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class SArg_Traits< ::FT_Naming::ChangeType>
    : public
        Basic_SArg_Traits_T<
            ::FT_Naming::ChangeType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::FT_Naming::NamingContextUpdate>
    : public
        Var_Size_SArg_Traits_T<
            ::FT_Naming::NamingContextUpdate,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::FT_Naming::ReplicaInfo>
    : public
        Var_Size_SArg_Traits_T<
            ::FT_Naming::ReplicaInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::FT_Naming::ObjectGroupUpdate>
    : public
        Fixed_Size_SArg_Traits_T<
            ::FT_Naming::ObjectGroupUpdate,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class SArg_Traits< ::FT_Naming::EntityKind>
    : public
        Basic_SArg_Traits_T<
            ::FT_Naming::EntityKind,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:1056

  template<>
  class SArg_Traits< ::FT_Naming::UpdateInfo>
    : public
        Var_Size_SArg_Traits_T<
            ::FT_Naming::UpdateInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::FT_Naming::UpdateInfoSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::FT_Naming::UpdateInfoSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_FT_NAMING_UPDATEPUSHNOTIFIER__SARG_TRAITS_)
#define _FT_NAMING_UPDATEPUSHNOTIFIER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::FT_Naming::UpdatePushNotifier>
    : public
        Object_SArg_Traits_T<
            ::FT_Naming::UpdatePushNotifier_ptr,
            ::FT_Naming::UpdatePushNotifier_var,
            ::FT_Naming::UpdatePushNotifier_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_FT_NAMING_AMI_UPDATEPUSHNOTIFIERHANDLER__SARG_TRAITS_)
#define _FT_NAMING_AMI_UPDATEPUSHNOTIFIERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::FT_Naming::AMI_UpdatePushNotifierHandler>
    : public
        Object_SArg_Traits_T<
            ::FT_Naming::AMI_UpdatePushNotifierHandler_ptr,
            ::FT_Naming::AMI_UpdatePushNotifierHandler_var,
            ::FT_Naming::AMI_UpdatePushNotifierHandler_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_FT_NAMING_REPLICATIONMANAGER__SARG_TRAITS_)
#define _FT_NAMING_REPLICATIONMANAGER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::FT_Naming::ReplicationManager>
    : public
        Object_SArg_Traits_T<
            ::FT_Naming::ReplicationManager_ptr,
            ::FT_Naming::ReplicationManager_var,
            ::FT_Naming::ReplicationManager_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_FT_NAMING_AMI_REPLICATIONMANAGERHANDLER__SARG_TRAITS_)
#define _FT_NAMING_AMI_REPLICATIONMANAGERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::FT_Naming::AMI_ReplicationManagerHandler>
    : public
        Object_SArg_Traits_T<
            ::FT_Naming::AMI_ReplicationManagerHandler_ptr,
            ::FT_Naming::AMI_ReplicationManagerHandler_var,
            ::FT_Naming::AMI_ReplicationManagerHandler_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_sh.cpp:35

namespace POA_FT_Naming
{
  

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class UpdatePushNotifier;
  typedef UpdatePushNotifier *UpdatePushNotifier_ptr;

  class TAO_FtNaming_Export UpdatePushNotifier
    : public virtual PortableServer::ServantBase
  {
  protected:
    UpdatePushNotifier (void);
  
  public:
    /// Useful for template programming.
    typedef ::FT_Naming::UpdatePushNotifier _stub_type;
    typedef ::FT_Naming::UpdatePushNotifier_ptr _stub_ptr_type;
    typedef ::FT_Naming::UpdatePushNotifier_var _stub_var_type;

    UpdatePushNotifier (const UpdatePushNotifier& rhs);
    virtual ~UpdatePushNotifier (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::FT_Naming::UpdatePushNotifier *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void register_peer (
      ::FT_Naming::UpdatePushNotifier_ptr peer,
      const ::FT_Naming::ReplicaInfo & info,
      ::CORBA::ULongLong initial_seq_num) = 0;

    static void register_peer_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void notify_update (
      ::CORBA::ULongLong seq_num,
      ::FT_Naming::UpdateInfoSeq & info) = 0;

    static void notify_update_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class AMI_UpdatePushNotifierHandler;
  typedef AMI_UpdatePushNotifierHandler *AMI_UpdatePushNotifierHandler_ptr;

  class TAO_FtNaming_Export AMI_UpdatePushNotifierHandler
    : public virtual POA_Messaging::ReplyHandler
  {
  protected:
    AMI_UpdatePushNotifierHandler (void);
  
  public:
    /// Useful for template programming.
    typedef ::FT_Naming::AMI_UpdatePushNotifierHandler _stub_type;
    typedef ::FT_Naming::AMI_UpdatePushNotifierHandler_ptr _stub_ptr_type;
    typedef ::FT_Naming::AMI_UpdatePushNotifierHandler_var _stub_var_type;

    AMI_UpdatePushNotifierHandler (const AMI_UpdatePushNotifierHandler& rhs);
    virtual ~AMI_UpdatePushNotifierHandler (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::FT_Naming::AMI_UpdatePushNotifierHandler *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void notify_update (
      const ::FT_Naming::UpdateInfoSeq & info) = 0;

    static void notify_update_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void notify_update_excep (
      ::Messaging::ExceptionHolder * excep_holder) = 0;

    static void notify_update_excep_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class ReplicationManager;
  typedef ReplicationManager *ReplicationManager_ptr;

  class TAO_FtNaming_Export ReplicationManager
    : public virtual PortableServer::ServantBase
  {
  protected:
    ReplicationManager (void);
  
  public:
    /// Useful for template programming.
    typedef ::FT_Naming::ReplicationManager _stub_type;
    typedef ::FT_Naming::ReplicationManager_ptr _stub_ptr_type;
    typedef ::FT_Naming::ReplicationManager_var _stub_var_type;

    ReplicationManager (const ReplicationManager& rhs);
    virtual ~ReplicationManager (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::FT_Naming::ReplicationManager *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual ::FT_Naming::ReplicaInfo * register_replica (
      ::FT_Naming::ReplicationManager_ptr replica,
      const ::FT_Naming::ReplicaInfo & replica_info) = 0;

    static void register_replica_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void notify_updated_object_group (
      const ::FT_Naming::ObjectGroupUpdate & group_info) = 0;

    static void notify_updated_object_group_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void notify_updated_context (
      const ::FT_Naming::NamingContextUpdate & context_info) = 0;

    static void notify_updated_context_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:73

  class AMI_ReplicationManagerHandler;
  typedef AMI_ReplicationManagerHandler *AMI_ReplicationManagerHandler_ptr;

  class TAO_FtNaming_Export AMI_ReplicationManagerHandler
    : public virtual POA_Messaging::ReplyHandler
  {
  protected:
    AMI_ReplicationManagerHandler (void);
  
  public:
    /// Useful for template programming.
    typedef ::FT_Naming::AMI_ReplicationManagerHandler _stub_type;
    typedef ::FT_Naming::AMI_ReplicationManagerHandler_ptr _stub_ptr_type;
    typedef ::FT_Naming::AMI_ReplicationManagerHandler_var _stub_var_type;

    AMI_ReplicationManagerHandler (const AMI_ReplicationManagerHandler& rhs);
    virtual ~AMI_ReplicationManagerHandler (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::FT_Naming::AMI_ReplicationManagerHandler *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void register_replica (
      const ::FT_Naming::ReplicaInfo & ami_return_val) = 0;

    static void register_replica_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:36

    virtual void register_replica_excep (
      ::Messaging::ExceptionHolder * excep_holder) = 0;

    static void register_replica_excep_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_sh.cpp:66

} // module FT_Naming

#include /**/ "ace/post.h"

#endif /* ifndef */

