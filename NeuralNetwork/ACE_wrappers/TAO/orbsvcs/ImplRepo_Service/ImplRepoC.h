// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:149

#ifndef _TAO_IDL_IMPLREPOC_GV8KN1_H_
#define _TAO_IDL_IMPLREPOC_GV8KN1_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "async_imr_client_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/StringSeqA.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ServerObjectC.h"
#include "tao/StringSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_root\root_ch.cpp:157

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:35

namespace ImplementationRepository
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:41

  class Async_IMR_Client_Export AlreadyRegistered : public ::CORBA::UserException
  {
  public:

    AlreadyRegistered (void);
    AlreadyRegistered (const AlreadyRegistered &);
    ~AlreadyRegistered (void);

    AlreadyRegistered &operator= (const AlreadyRegistered &);

    static void _tao_any_destructor (void *);

    static AlreadyRegistered *_downcast ( ::CORBA::Exception *);
    static const AlreadyRegistered *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AlreadyRegistered;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:41

  class Async_IMR_Client_Export CannotActivate : public ::CORBA::UserException
  {
  public:
    ::TAO::String_Manager reason;

    CannotActivate (void);
    CannotActivate (const CannotActivate &);
    ~CannotActivate (void);

    CannotActivate &operator= (const CannotActivate &);

    static void _tao_any_destructor (void *);

    static CannotActivate *_downcast ( ::CORBA::Exception *);
    static const CannotActivate *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ctor.cpp:51

    CannotActivate (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_CannotActivate;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:41

  class Async_IMR_Client_Export NotFound : public ::CORBA::UserException
  {
  public:

    NotFound (void);
    NotFound (const NotFound &);
    ~NotFound (void);

    NotFound &operator= (const NotFound &);

    static void _tao_any_destructor (void *);

    static NotFound *_downcast ( ::CORBA::Exception *);
    static const NotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_NotFound;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:41

  class Async_IMR_Client_Export CannotComplete : public ::CORBA::UserException
  {
  public:
    ::TAO::String_Manager reason;

    CannotComplete (void);
    CannotComplete (const CannotComplete &);
    ~CannotComplete (void);

    CannotComplete &operator= (const CannotComplete &);

    static void _tao_any_destructor (void *);

    static CannotComplete *_downcast ( ::CORBA::Exception *);
    static const CannotComplete *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ctor.cpp:51

    CannotComplete (
        const char * _tao_reason);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_CannotComplete;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

  struct EnvironmentVariable;

  typedef
    ::TAO_Var_Var_T<
        EnvironmentVariable
      >
    EnvironmentVariable_var;

  typedef
    ::TAO_Out_T<
        EnvironmentVariable
      >
    EnvironmentVariable_out;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

  struct Async_IMR_Client_Export EnvironmentVariable
  {

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    
    typedef EnvironmentVariable_var _var_type;
    typedef EnvironmentVariable_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager value;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_EnvironmentVariable;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:99

#if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CH_)
#define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CH_

  class EnvironmentList;
  typedef ::TAO_VarSeq_Var_T<EnvironmentList> EnvironmentList_var;
  typedef ::TAO_Seq_Out_T<EnvironmentList> EnvironmentList_out;
  

  class Async_IMR_Client_Export EnvironmentList
    : public
        ::TAO::unbounded_value_sequence< EnvironmentVariable>
  {
  public:
    EnvironmentList (void);
    EnvironmentList ( ::CORBA::ULong max);
    EnvironmentList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      EnvironmentVariable* buffer,
      ::CORBA::Boolean release = false);
    EnvironmentList (const EnvironmentList &);
    virtual ~EnvironmentList (void);
    

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    
    typedef EnvironmentList_var _var_type;
    typedef EnvironmentList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_EnvironmentList;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\enum_ch.cpp:44

  enum ActivationMode
  {
    NORMAL,
    MANUAL,
    PER_CLIENT,
    AUTO_START
  };

  typedef ActivationMode &ActivationMode_out;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ActivationMode;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

  struct StartupOptions;

  typedef
    ::TAO_Var_Var_T<
        StartupOptions
      >
    StartupOptions_var;

  typedef
    ::TAO_Out_T<
        StartupOptions
      >
    StartupOptions_out;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

  struct Async_IMR_Client_Export StartupOptions
  {

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    
    typedef StartupOptions_var _var_type;
    typedef StartupOptions_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager command_line;
    ImplementationRepository::EnvironmentList environment;
    ::TAO::String_Manager working_directory;
    ImplementationRepository::ActivationMode activation;
    ::TAO::String_Manager activator;
    ::CORBA::Long start_limit;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_StartupOptions;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\enum_ch.cpp:44

  enum ServerActiveStatus
  {
    ACTIVE_MAYBE,
    ACTIVE_YES,
    ACTIVE_NO
  };

  typedef ServerActiveStatus &ServerActiveStatus_out;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerActiveStatus;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

  struct ServerInformation;

  typedef
    ::TAO_Var_Var_T<
        ServerInformation
      >
    ServerInformation_var;

  typedef
    ::TAO_Out_T<
        ServerInformation
      >
    ServerInformation_out;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

  struct Async_IMR_Client_Export ServerInformation
  {

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    
    typedef ServerInformation_var _var_type;
    typedef ServerInformation_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager server;
    ImplementationRepository::StartupOptions startup;
    ::TAO::String_Manager partial_ior;
    ImplementationRepository::ServerActiveStatus activeStatus;
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerInformation;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:99

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CH_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CH_

  class ServerInformationList;
  typedef ::TAO_VarSeq_Var_T<ServerInformationList> ServerInformationList_var;
  typedef ::TAO_Seq_Out_T<ServerInformationList> ServerInformationList_out;
  

  class Async_IMR_Client_Export ServerInformationList
    : public
        ::TAO::unbounded_value_sequence< ServerInformation>
  {
  public:
    ServerInformationList (void);
    ServerInformationList ( ::CORBA::ULong max);
    ServerInformationList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ServerInformation* buffer,
      ::CORBA::Boolean release = false);
    ServerInformationList (const ServerInformationList &);
    virtual ~ServerInformationList (void);
    

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    
    typedef ServerInformationList_var _var_type;
    typedef ServerInformationList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerInformationList;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__VAR_OUT_CH_

  class ServerInformationIterator;
  typedef ServerInformationIterator *ServerInformationIterator_ptr;
  typedef TAO_Objref_Var_T<ServerInformationIterator> ServerInformationIterator_var;
  typedef TAO_Objref_Out_T<ServerInformationIterator> ServerInformationIterator_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

  class Async_IMR_Client_Export ServerInformationIterator
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ServerInformationIterator>;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef ServerInformationIterator_ptr _ptr_type;
    typedef ServerInformationIterator_var _var_type;
    typedef ServerInformationIterator_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ServerInformationIterator_ptr _duplicate (ServerInformationIterator_ptr obj);

    static void _tao_release (ServerInformationIterator_ptr obj);

    static ServerInformationIterator_ptr _narrow (::CORBA::Object_ptr obj);
    static ServerInformationIterator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ServerInformationIterator_ptr _nil (void);

    virtual ::CORBA::Boolean next_n (
      ::CORBA::ULong how_many,
      ::ImplementationRepository::ServerInformationList_out servers);

    virtual void destroy (
      void);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ServerInformationIterator (void);

    // Concrete non-local interface only.
    ServerInformationIterator (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ServerInformationIterator (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ServerInformationIterator (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ServerInformationIterator (const ServerInformationIterator &);

    void operator= (const ServerInformationIterator &);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_ServerInformationIterator;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:564

  

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATOREXCEPTIONHOLDER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATOREXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_ServerInformationIteratorExceptionHolder;
  typedef
    TAO_Value_Var_T<
        AMH_ServerInformationIteratorExceptionHolder
      >
    AMH_ServerInformationIteratorExceptionHolder_var;
  
  typedef
    TAO_Value_Out_T<
        AMH_ServerInformationIteratorExceptionHolder
      >
    AMH_ServerInformationIteratorExceptionHolder_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:50

  class Async_IMR_Client_Export AMH_ServerInformationIteratorExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef AMH_ServerInformationIteratorExceptionHolder * _ptr_type;
    typedef AMH_ServerInformationIteratorExceptionHolder_var _var_type;
    typedef AMH_ServerInformationIteratorExceptionHolder_out _out_type;

    static void _tao_any_destructor (void *);

    AMH_ServerInformationIteratorExceptionHolder ( ::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_ServerInformationIteratorExceptionHolder (void);
    virtual ::CORBA::ValueBase *_copy_value (void);

    static AMH_ServerInformationIteratorExceptionHolder* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_ServerInformationIteratorExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
    
  public:
    virtual void raise_next_n (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_destroy (void);

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:238

protected:
  AMH_ServerInformationIteratorExceptionHolder (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  AMH_ServerInformationIteratorExceptionHolder (const AMH_ServerInformationIteratorExceptionHolder &);
  void operator= (const AMH_ServerInformationIteratorExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_ServerInformationIteratorExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_ServerInformationIteratorExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AMH_ServerInformationIteratorExceptionHolder;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATORRESPONSEHANDLER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATORRESPONSEHANDLER__VAR_OUT_CH_

class AMH_ServerInformationIteratorResponseHandler;
typedef AMH_ServerInformationIteratorResponseHandler *AMH_ServerInformationIteratorResponseHandler_ptr;
typedef TAO_Objref_Var_T<AMH_ServerInformationIteratorResponseHandler> AMH_ServerInformationIteratorResponseHandler_var;
typedef TAO_Objref_Out_T<AMH_ServerInformationIteratorResponseHandler> AMH_ServerInformationIteratorResponseHandler_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class Async_IMR_Client_Export AMH_ServerInformationIteratorResponseHandler
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_ServerInformationIteratorResponseHandler_ptr _ptr_type;
  typedef AMH_ServerInformationIteratorResponseHandler_var _var_type;
  typedef AMH_ServerInformationIteratorResponseHandler_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_ServerInformationIteratorResponseHandler_ptr _duplicate (AMH_ServerInformationIteratorResponseHandler_ptr obj);

  static void _tao_release (AMH_ServerInformationIteratorResponseHandler_ptr obj);

  static AMH_ServerInformationIteratorResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_ServerInformationIteratorResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_ServerInformationIteratorResponseHandler_ptr _nil (void);

  virtual void next_n (
    ::CORBA::Boolean return_value,
    const ::ImplementationRepository::ServerInformationList & servers) = 0;

  virtual void next_n_excep (
    ::ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder * holder) = 0;

  virtual void destroy (
    void) = 0;

  virtual void destroy_excep (
    ::ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder * holder) = 0;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_ServerInformationIteratorResponseHandler (void);

  

  virtual ~AMH_ServerInformationIteratorResponseHandler (void);

private:
  // Private and unimplemented for concrete interfaces.
  AMH_ServerInformationIteratorResponseHandler (const AMH_ServerInformationIteratorResponseHandler &);

  void operator= (const AMH_ServerInformationIteratorResponseHandler &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AMH_ServerInformationIteratorResponseHandler;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__VAR_OUT_CH_

class Administration;
typedef Administration *Administration_ptr;
typedef TAO_Objref_Var_T<Administration> Administration_var;
typedef TAO_Objref_Out_T<Administration> Administration_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class Async_IMR_Client_Export Administration
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Administration>;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef Administration_ptr _ptr_type;
  typedef Administration_var _var_type;
  typedef Administration_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Administration_ptr _duplicate (Administration_ptr obj);

  static void _tao_release (Administration_ptr obj);

  static Administration_ptr _narrow (::CORBA::Object_ptr obj);
  static Administration_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Administration_ptr _nil (void);

  virtual void activate_server (
    const char * server);

  virtual void add_or_update_server (
    const char * server,
    const ::ImplementationRepository::StartupOptions & options);

  virtual void remove_server (
    const char * server);

  virtual void shutdown_server (
    const char * server);

  virtual void server_is_running (
    const char * server,
    const char * partial_ior,
    ::ImplementationRepository::ServerObject_ptr server_object);

  virtual void server_is_shutting_down (
    const char * server);

  virtual void find (
    const char * server,
    ::ImplementationRepository::ServerInformation_out info);

  virtual void list (
    ::CORBA::ULong how_many,
    ::CORBA::Boolean determine_active_status,
    ::ImplementationRepository::ServerInformationList_out server_list,
    ::ImplementationRepository::ServerInformationIterator_out server_iterator);

  virtual void shutdown (
    ::CORBA::Boolean activators,
    ::CORBA::Boolean servers);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Administration (void);

  // Concrete non-local interface only.
  Administration (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Administration (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Administration (void);

private:
  // Private and unimplemented for concrete interfaces.
  Administration (const Administration &);

  void operator= (const Administration &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_Administration;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:564



#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_AdministrationExceptionHolder;
typedef
  TAO_Value_Var_T<
      AMH_AdministrationExceptionHolder
    >
  AMH_AdministrationExceptionHolder_var;

typedef
  TAO_Value_Out_T<
      AMH_AdministrationExceptionHolder
    >
  AMH_AdministrationExceptionHolder_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:50

class Async_IMR_Client_Export AMH_AdministrationExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_AdministrationExceptionHolder * _ptr_type;
  typedef AMH_AdministrationExceptionHolder_var _var_type;
  typedef AMH_AdministrationExceptionHolder_out _out_type;

  static void _tao_any_destructor (void *);

  AMH_AdministrationExceptionHolder ( ::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_AdministrationExceptionHolder (void);
  virtual ::CORBA::ValueBase *_copy_value (void);

  static AMH_AdministrationExceptionHolder* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_AdministrationExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_activate_server (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_add_or_update_server (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_remove_server (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_shutdown_server (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_server_is_running (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_server_is_shutting_down (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_find (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_list (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_shutdown (void);

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:238

protected:
  AMH_AdministrationExceptionHolder (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  AMH_AdministrationExceptionHolder (const AMH_AdministrationExceptionHolder &);
  void operator= (const AMH_AdministrationExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_AdministrationExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_AdministrationExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AMH_AdministrationExceptionHolder;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONRESPONSEHANDLER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONRESPONSEHANDLER__VAR_OUT_CH_

class AMH_AdministrationResponseHandler;
typedef AMH_AdministrationResponseHandler *AMH_AdministrationResponseHandler_ptr;
typedef TAO_Objref_Var_T<AMH_AdministrationResponseHandler> AMH_AdministrationResponseHandler_var;
typedef TAO_Objref_Out_T<AMH_AdministrationResponseHandler> AMH_AdministrationResponseHandler_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class Async_IMR_Client_Export AMH_AdministrationResponseHandler
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_AdministrationResponseHandler_ptr _ptr_type;
  typedef AMH_AdministrationResponseHandler_var _var_type;
  typedef AMH_AdministrationResponseHandler_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_AdministrationResponseHandler_ptr _duplicate (AMH_AdministrationResponseHandler_ptr obj);

  static void _tao_release (AMH_AdministrationResponseHandler_ptr obj);

  static AMH_AdministrationResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_AdministrationResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_AdministrationResponseHandler_ptr _nil (void);

  virtual void activate_server (
    void) = 0;

  virtual void activate_server_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void add_or_update_server (
    void) = 0;

  virtual void add_or_update_server_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void remove_server (
    void) = 0;

  virtual void remove_server_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void shutdown_server (
    void) = 0;

  virtual void shutdown_server_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void server_is_running (
    void) = 0;

  virtual void server_is_running_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void server_is_shutting_down (
    void) = 0;

  virtual void server_is_shutting_down_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void find (
    const ::ImplementationRepository::ServerInformation & info) = 0;

  virtual void find_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void list (
    const ::ImplementationRepository::ServerInformationList & server_list,
    ::ImplementationRepository::ServerInformationIterator_ptr server_iterator) = 0;

  virtual void list_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  virtual void shutdown (
    void) = 0;

  virtual void shutdown_excep (
    ::ImplementationRepository::AMH_AdministrationExceptionHolder * holder) = 0;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_AdministrationResponseHandler (void);

  

  virtual ~AMH_AdministrationResponseHandler (void);

private:
  // Private and unimplemented for concrete interfaces.
  AMH_AdministrationResponseHandler (const AMH_AdministrationResponseHandler &);

  void operator= (const AMH_AdministrationResponseHandler &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AMH_AdministrationResponseHandler;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__VAR_OUT_CH_

class AdministrationExt;
typedef AdministrationExt *AdministrationExt_ptr;
typedef TAO_Objref_Var_T<AdministrationExt> AdministrationExt_var;
typedef TAO_Objref_Out_T<AdministrationExt> AdministrationExt_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class Async_IMR_Client_Export AdministrationExt
  : public virtual ::ImplementationRepository::Administration

{
public:
  friend class TAO::Narrow_Utils<AdministrationExt>;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AdministrationExt_ptr _ptr_type;
  typedef AdministrationExt_var _var_type;
  typedef AdministrationExt_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AdministrationExt_ptr _duplicate (AdministrationExt_ptr obj);

  static void _tao_release (AdministrationExt_ptr obj);

  static AdministrationExt_ptr _narrow (::CORBA::Object_ptr obj);
  static AdministrationExt_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AdministrationExt_ptr _nil (void);

  virtual void link_servers (
    const char * server,
    const ::CORBA::StringSeq & peers);

  virtual void kill_server (
    const char * server,
    ::CORBA::Short signum);

  virtual void force_remove_server (
    const char * server,
    ::CORBA::Short signum);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AdministrationExt (void);

  // Concrete non-local interface only.
  AdministrationExt (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AdministrationExt (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~AdministrationExt (void);

private:
  // Private and unimplemented for concrete interfaces.
  AdministrationExt (const AdministrationExt &);

  void operator= (const AdministrationExt &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AdministrationExt;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:564



#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_AdministrationExtExceptionHolder;
typedef
  TAO_Value_Var_T<
      AMH_AdministrationExtExceptionHolder
    >
  AMH_AdministrationExtExceptionHolder_var;

typedef
  TAO_Value_Out_T<
      AMH_AdministrationExtExceptionHolder
    >
  AMH_AdministrationExtExceptionHolder_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:50

class Async_IMR_Client_Export AMH_AdministrationExtExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_AdministrationExtExceptionHolder * _ptr_type;
  typedef AMH_AdministrationExtExceptionHolder_var _var_type;
  typedef AMH_AdministrationExtExceptionHolder_out _out_type;

  static void _tao_any_destructor (void *);

  AMH_AdministrationExtExceptionHolder ( ::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_AdministrationExtExceptionHolder (void);
  virtual ::CORBA::ValueBase *_copy_value (void);

  static AMH_AdministrationExtExceptionHolder* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_AdministrationExtExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_link_servers (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_kill_server (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_force_remove_server (void);

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:238

protected:
  AMH_AdministrationExtExceptionHolder (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  AMH_AdministrationExtExceptionHolder (const AMH_AdministrationExtExceptionHolder &);
  void operator= (const AMH_AdministrationExtExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_AdministrationExtExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_AdministrationExtExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AMH_AdministrationExtExceptionHolder;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTRESPONSEHANDLER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTRESPONSEHANDLER__VAR_OUT_CH_

class AMH_AdministrationExtResponseHandler;
typedef AMH_AdministrationExtResponseHandler *AMH_AdministrationExtResponseHandler_ptr;
typedef TAO_Objref_Var_T<AMH_AdministrationExtResponseHandler> AMH_AdministrationExtResponseHandler_var;
typedef TAO_Objref_Out_T<AMH_AdministrationExtResponseHandler> AMH_AdministrationExtResponseHandler_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class Async_IMR_Client_Export AMH_AdministrationExtResponseHandler
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_AdministrationExtResponseHandler_ptr _ptr_type;
  typedef AMH_AdministrationExtResponseHandler_var _var_type;
  typedef AMH_AdministrationExtResponseHandler_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_AdministrationExtResponseHandler_ptr _duplicate (AMH_AdministrationExtResponseHandler_ptr obj);

  static void _tao_release (AMH_AdministrationExtResponseHandler_ptr obj);

  static AMH_AdministrationExtResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_AdministrationExtResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_AdministrationExtResponseHandler_ptr _nil (void);

  virtual void link_servers (
    void) = 0;

  virtual void link_servers_excep (
    ::ImplementationRepository::AMH_AdministrationExtExceptionHolder * holder) = 0;

  virtual void kill_server (
    void) = 0;

  virtual void kill_server_excep (
    ::ImplementationRepository::AMH_AdministrationExtExceptionHolder * holder) = 0;

  virtual void force_remove_server (
    void) = 0;

  virtual void force_remove_server_excep (
    ::ImplementationRepository::AMH_AdministrationExtExceptionHolder * holder) = 0;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_AdministrationExtResponseHandler (void);

  

  virtual ~AMH_AdministrationExtResponseHandler (void);

private:
  // Private and unimplemented for concrete interfaces.
  AMH_AdministrationExtResponseHandler (const AMH_AdministrationExtResponseHandler &);

  void operator= (const AMH_AdministrationExtResponseHandler &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern Async_IMR_Client_Export ::CORBA::TypeCode_ptr const _tc_AMH_AdministrationExtResponseHandler;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:64

} // module ImplementationRepository

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:66


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::ImplementationRepository::EnvironmentVariable>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::EnvironmentVariable,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::ImplementationRepository::EnvironmentList>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::EnvironmentList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::ImplementationRepository::ActivationMode>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::ActivationMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::ImplementationRepository::StartupOptions>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::StartupOptions,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::ImplementationRepository::ServerActiveStatus>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::ServerActiveStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::ImplementationRepository::ServerInformation>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::ServerInformation,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::ImplementationRepository::ServerInformationList>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::ServerInformationList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::ServerInformationIterator>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::ServerInformationIterator_ptr,
            ::ImplementationRepository::ServerInformationIterator_var,
            ::ImplementationRepository::ServerInformationIterator_out,
            TAO::Objref_Traits<ImplementationRepository::ServerInformationIterator>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:306

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATOREXCEPTIONHOLDER__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATOREXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *,
            ::ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder_var,
            ::ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder_out,
            TAO::Value_Traits<ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::Administration>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::Administration_ptr,
            ::ImplementationRepository::Administration_var,
            ::ImplementationRepository::Administration_out,
            TAO::Objref_Traits<ImplementationRepository::Administration>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:306

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXCEPTIONHOLDER__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ImplementationRepository::AMH_AdministrationExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::AMH_AdministrationExceptionHolder *,
            ::ImplementationRepository::AMH_AdministrationExceptionHolder_var,
            ::ImplementationRepository::AMH_AdministrationExceptionHolder_out,
            TAO::Value_Traits<ImplementationRepository::AMH_AdministrationExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::AdministrationExt>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::AdministrationExt_ptr,
            ::ImplementationRepository::AdministrationExt_var,
            ::ImplementationRepository::AdministrationExt_out,
            TAO::Objref_Traits<ImplementationRepository::AdministrationExt>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:306

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTEXCEPTIONHOLDER__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ImplementationRepository::AMH_AdministrationExtExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::AMH_AdministrationExtExceptionHolder *,
            ::ImplementationRepository::AMH_AdministrationExtExceptionHolder_var,
            ::ImplementationRepository::AMH_AdministrationExtExceptionHolder_out,
            TAO::Value_Traits<ImplementationRepository::AMH_AdministrationExtExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\obv_module.cpp:44

namespace OBV_ImplementationRepository
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_ch.cpp:44

  // OBV_ class
  class Async_IMR_Client_Export AMH_ServerInformationIteratorExceptionHolder
    : public virtual ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder
  {

protected:
  AMH_ServerInformationIteratorExceptionHolder (void);
  virtual ~AMH_ServerInformationIteratorExceptionHolder (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_ServerInformationIteratorExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_ServerInformationIteratorExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_ch.cpp:44

// OBV_ class
class Async_IMR_Client_Export AMH_AdministrationExceptionHolder
  : public virtual ImplementationRepository::AMH_AdministrationExceptionHolder
{

protected:
  AMH_AdministrationExceptionHolder (void);
  virtual ~AMH_AdministrationExceptionHolder (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_AdministrationExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_AdministrationExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_ch.cpp:44

// OBV_ class
class Async_IMR_Client_Export AMH_AdministrationExtExceptionHolder
  : public virtual ImplementationRepository::AMH_AdministrationExtExceptionHolder
{

protected:
  AMH_AdministrationExtExceptionHolder (void);
  virtual ~AMH_AdministrationExtExceptionHolder (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_AdministrationExtExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_AdministrationExtExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:60


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__TRAITS_

  template<>
  struct Async_IMR_Client_Export Objref_Traits< ::ImplementationRepository::ServerInformationIterator>
  {
    static ::ImplementationRepository::ServerInformationIterator_ptr duplicate (
        ::ImplementationRepository::ServerInformationIterator_ptr p);
    static void release (
        ::ImplementationRepository::ServerInformationIterator_ptr p);
    static ::ImplementationRepository::ServerInformationIterator_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::ServerInformationIterator_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATOREXCEPTIONHOLDER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATOREXCEPTIONHOLDER__TRAITS_

  template<>
  struct Async_IMR_Client_Export Value_Traits<ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder>
  {
    static void add_ref (ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *);
    static void remove_ref (ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *);
    static void release (ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATORRESPONSEHANDLER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_SERVERINFORMATIONITERATORRESPONSEHANDLER__TRAITS_

  template<>
  struct Async_IMR_Client_Export Objref_Traits< ::ImplementationRepository::AMH_ServerInformationIteratorResponseHandler>
  {
    static ::ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr duplicate (
        ::ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr p);
    static void release (
        ::ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr p);
    static ::ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__TRAITS_

  template<>
  struct Async_IMR_Client_Export Objref_Traits< ::ImplementationRepository::Administration>
  {
    static ::ImplementationRepository::Administration_ptr duplicate (
        ::ImplementationRepository::Administration_ptr p);
    static void release (
        ::ImplementationRepository::Administration_ptr p);
    static ::ImplementationRepository::Administration_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::Administration_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXCEPTIONHOLDER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXCEPTIONHOLDER__TRAITS_

  template<>
  struct Async_IMR_Client_Export Value_Traits<ImplementationRepository::AMH_AdministrationExceptionHolder>
  {
    static void add_ref (ImplementationRepository::AMH_AdministrationExceptionHolder *);
    static void remove_ref (ImplementationRepository::AMH_AdministrationExceptionHolder *);
    static void release (ImplementationRepository::AMH_AdministrationExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONRESPONSEHANDLER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONRESPONSEHANDLER__TRAITS_

  template<>
  struct Async_IMR_Client_Export Objref_Traits< ::ImplementationRepository::AMH_AdministrationResponseHandler>
  {
    static ::ImplementationRepository::AMH_AdministrationResponseHandler_ptr duplicate (
        ::ImplementationRepository::AMH_AdministrationResponseHandler_ptr p);
    static void release (
        ::ImplementationRepository::AMH_AdministrationResponseHandler_ptr p);
    static ::ImplementationRepository::AMH_AdministrationResponseHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::AMH_AdministrationResponseHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_ADMINISTRATIONEXT__TRAITS_

  template<>
  struct Async_IMR_Client_Export Objref_Traits< ::ImplementationRepository::AdministrationExt>
  {
    static ::ImplementationRepository::AdministrationExt_ptr duplicate (
        ::ImplementationRepository::AdministrationExt_ptr p);
    static void release (
        ::ImplementationRepository::AdministrationExt_ptr p);
    static ::ImplementationRepository::AdministrationExt_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::AdministrationExt_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTEXCEPTIONHOLDER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTEXCEPTIONHOLDER__TRAITS_

  template<>
  struct Async_IMR_Client_Export Value_Traits<ImplementationRepository::AMH_AdministrationExtExceptionHolder>
  {
    static void add_ref (ImplementationRepository::AMH_AdministrationExtExceptionHolder *);
    static void remove_ref (ImplementationRepository::AMH_AdministrationExtExceptionHolder *);
    static void release (ImplementationRepository::AMH_AdministrationExtExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTRESPONSEHANDLER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_ADMINISTRATIONEXTRESPONSEHANDLER__TRAITS_

  template<>
  struct Async_IMR_Client_Export Objref_Traits< ::ImplementationRepository::AMH_AdministrationExtResponseHandler>
  {
    static ::ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr duplicate (
        ::ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr p);
    static void release (
        ::ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr p);
    static ::ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\any_op_ch.cpp:38

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::AlreadyRegistered &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::AlreadyRegistered*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::AlreadyRegistered *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::AlreadyRegistered &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AlreadyRegistered*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::AlreadyRegistered *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\any_op_ch.cpp:38

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::CannotActivate &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::CannotActivate*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::CannotActivate *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::CannotActivate &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::CannotActivate*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::CannotActivate *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\any_op_ch.cpp:38

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::NotFound &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::NotFound*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::NotFound *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::NotFound &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::NotFound*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::NotFound *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\any_op_ch.cpp:38

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::CannotComplete &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::CannotComplete*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::CannotComplete *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::CannotComplete &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::CannotComplete*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::CannotComplete *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::EnvironmentVariable &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::EnvironmentVariable*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::EnvironmentVariable *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::EnvironmentVariable &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::EnvironmentVariable*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::EnvironmentVariable *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ::ImplementationRepository::EnvironmentList &); // copying version
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ::ImplementationRepository::EnvironmentList*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::EnvironmentList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ImplementationRepository::EnvironmentList &); // copying version
Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ImplementationRepository::EnvironmentList*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::EnvironmentList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::ActivationMode);
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::ActivationMode &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ActivationMode);
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::ActivationMode &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::StartupOptions &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::StartupOptions*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::StartupOptions *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::StartupOptions &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::StartupOptions*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::StartupOptions *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::ServerActiveStatus);
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::ServerActiveStatus &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerActiveStatus);
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::ServerActiveStatus &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::ServerInformation &); // copying version
  Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::ServerInformation*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::ServerInformation *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::ServerInformation &); // copying version
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerInformation*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::ServerInformation *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ::ImplementationRepository::ServerInformationList &); // copying version
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ::ImplementationRepository::ServerInformationList*); // noncopying version
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::ServerInformationList *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, const ImplementationRepository::ServerInformationList &); // copying version
Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ImplementationRepository::ServerInformationList*); // noncopying version
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::ServerInformationList *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ServerInformationIterator_ptr); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, ServerInformationIterator_ptr *); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ServerInformationIterator_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerInformationIterator_ptr); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::ServerInformationIterator_ptr *); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::ServerInformationIterator_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_ServerInformationIteratorExceptionHolder *); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_ServerInformationIteratorExceptionHolder **); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_ServerInformationIteratorExceptionHolder *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder **); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_ServerInformationIteratorResponseHandler_ptr); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_ServerInformationIteratorResponseHandler_ptr *); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_ServerInformationIteratorResponseHandler_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr *); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_ServerInformationIteratorResponseHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, Administration_ptr); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, Administration_ptr *); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Administration_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::Administration_ptr); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::Administration_ptr *); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::Administration_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationExceptionHolder *); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationExceptionHolder **); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_AdministrationExceptionHolder *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationExceptionHolder *); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationExceptionHolder **); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_AdministrationExceptionHolder *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationResponseHandler_ptr); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationResponseHandler_ptr *); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_AdministrationResponseHandler_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationResponseHandler_ptr); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationResponseHandler_ptr *); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_AdministrationResponseHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AdministrationExt_ptr); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AdministrationExt_ptr *); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AdministrationExt_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AdministrationExt_ptr); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AdministrationExt_ptr *); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AdministrationExt_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationExtExceptionHolder *); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationExtExceptionHolder **); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_AdministrationExtExceptionHolder *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationExtExceptionHolder *); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationExtExceptionHolder **); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_AdministrationExtExceptionHolder *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationExtResponseHandler_ptr); // copying
  Async_IMR_Client_Export void operator<<= ( ::CORBA::Any &, AMH_AdministrationExtResponseHandler_ptr *); // non-copying
  Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_AdministrationExtResponseHandler_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr); // copying
Async_IMR_Client_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr *); // non-copying
Async_IMR_Client_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_AdministrationExtResponseHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:37

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AlreadyRegistered &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AlreadyRegistered &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:37

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::CannotActivate &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::CannotActivate &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:37

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::NotFound &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::NotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:37

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::CannotComplete &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::CannotComplete &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::EnvironmentVariable &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::EnvironmentVariable &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_ImplementationRepository_EnvironmentList_H_
#define _TAO_CDR_OP_ImplementationRepository_EnvironmentList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


Async_IMR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::EnvironmentList &_tao_sequence);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::EnvironmentList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_ImplementationRepository_EnvironmentList_H_ */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:34



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::ActivationMode _tao_enumerator);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::ActivationMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::StartupOptions &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::StartupOptions &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:34



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::ServerActiveStatus _tao_enumerator);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::ServerActiveStatus &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::ServerInformation &);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::ServerInformation &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_ImplementationRepository_ServerInformationList_H_
#define _TAO_CDR_OP_ImplementationRepository_ServerInformationList_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


Async_IMR_Client_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::ServerInformationList &_tao_sequence);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::ServerInformationList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_ImplementationRepository_ServerInformationList_H_ */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:41


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::ServerInformationIterator_ptr );
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::ServerInformationIterator_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:456



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern Async_IMR_Client_Export void add_ref (ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *);
  extern Async_IMR_Client_Export void remove_ref (ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\cdr_op_ch.cpp:49



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AMH_ServerInformationIteratorExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:41


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::Administration_ptr );
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::Administration_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:456



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern Async_IMR_Client_Export void add_ref (ImplementationRepository::AMH_AdministrationExceptionHolder *);
  extern Async_IMR_Client_Export void remove_ref (ImplementationRepository::AMH_AdministrationExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\cdr_op_ch.cpp:49



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AMH_AdministrationExceptionHolder *);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AMH_AdministrationExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:41


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AdministrationExt_ptr );
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AdministrationExt_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:456



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern Async_IMR_Client_Export void add_ref (ImplementationRepository::AMH_AdministrationExtExceptionHolder *);
  extern Async_IMR_Client_Export void remove_ref (ImplementationRepository::AMH_AdministrationExtExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\cdr_op_ch.cpp:49



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Async_IMR_Client_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AMH_AdministrationExtExceptionHolder *);
Async_IMR_Client_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AMH_AdministrationExtExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1686


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "ImplRepoC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

