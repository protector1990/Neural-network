// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.0
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:149

#ifndef _TAO_IDL_IMR_LOCATORC_VV9YCM_H_
#define _TAO_IDL_IMR_LOCATORC_VV9YCM_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "locator_idl_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ImR_ActivatorC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_root\root_ch.cpp:157

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:35

namespace ImplementationRepository
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_LOCATOR__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_LOCATOR__VAR_OUT_CH_

  class Locator;
  typedef Locator *Locator_ptr;
  typedef TAO_Objref_Var_T<Locator> Locator_var;
  typedef TAO_Objref_Out_T<Locator> Locator_out;
  

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

  class LocatorIDL_Export Locator
    : public virtual ::ImplementationRepository::AdministrationExt
  
  {
  public:
    friend class TAO::Narrow_Utils<Locator>;

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef Locator_ptr _ptr_type;
    typedef Locator_var _var_type;
    typedef Locator_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Locator_ptr _duplicate (Locator_ptr obj);

    static void _tao_release (Locator_ptr obj);

    static Locator_ptr _narrow (::CORBA::Object_ptr obj);
    static Locator_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Locator_ptr _nil (void);

    virtual ::CORBA::Long register_activator (
      const char * name,
      ::ImplementationRepository::Activator_ptr act);

    virtual void unregister_activator (
      const char * name,
      ::CORBA::Long token);

    virtual void notify_child_death (
      const char * name);

    virtual void child_death_pid (
      const char * name,
      ::CORBA::Long pid);

    virtual void spawn_pid (
      const char * name,
      ::CORBA::Long pid);

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    Locator (void);

    // Concrete non-local interface only.
    Locator (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Locator (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Locator (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Locator (const Locator &);

    void operator= (const Locator &);
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

  extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_Locator;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:564

  

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_LOCATOREXCEPTIONHOLDER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_LOCATOREXCEPTIONHOLDER__VAR_OUT_CH_

  class AMH_LocatorExceptionHolder;
  typedef
    TAO_Value_Var_T<
        AMH_LocatorExceptionHolder
      >
    AMH_LocatorExceptionHolder_var;
  
  typedef
    TAO_Value_Out_T<
        AMH_LocatorExceptionHolder
      >
    AMH_LocatorExceptionHolder_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:50

  class LocatorIDL_Export AMH_LocatorExceptionHolder
    : public virtual ::CORBA::DefaultValueRefCountBase
  {
  public:

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    typedef AMH_LocatorExceptionHolder * _ptr_type;
    typedef AMH_LocatorExceptionHolder_var _var_type;
    typedef AMH_LocatorExceptionHolder_out _out_type;

    static void _tao_any_destructor (void *);

    AMH_LocatorExceptionHolder ( ::CORBA::Exception *ex)
      : exception (ex)
    {}

    virtual ~AMH_LocatorExceptionHolder (void);
    virtual ::CORBA::ValueBase *_copy_value (void);

    static AMH_LocatorExceptionHolder* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AMH_LocatorExceptionHolder *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
    
  public:
    virtual void raise_register_activator (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_unregister_activator (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_notify_child_death (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_child_death_pid (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_spawn_pid (void);

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:238

protected:
  AMH_LocatorExceptionHolder (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  AMH_LocatorExceptionHolder (const AMH_LocatorExceptionHolder &);
  void operator= (const AMH_LocatorExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_LocatorExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_LocatorExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_AMH_LocatorExceptionHolder;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_LOCATORRESPONSEHANDLER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_LOCATORRESPONSEHANDLER__VAR_OUT_CH_

class AMH_LocatorResponseHandler;
typedef AMH_LocatorResponseHandler *AMH_LocatorResponseHandler_ptr;
typedef TAO_Objref_Var_T<AMH_LocatorResponseHandler> AMH_LocatorResponseHandler_var;
typedef TAO_Objref_Out_T<AMH_LocatorResponseHandler> AMH_LocatorResponseHandler_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class LocatorIDL_Export AMH_LocatorResponseHandler
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_LocatorResponseHandler_ptr _ptr_type;
  typedef AMH_LocatorResponseHandler_var _var_type;
  typedef AMH_LocatorResponseHandler_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_LocatorResponseHandler_ptr _duplicate (AMH_LocatorResponseHandler_ptr obj);

  static void _tao_release (AMH_LocatorResponseHandler_ptr obj);

  static AMH_LocatorResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_LocatorResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_LocatorResponseHandler_ptr _nil (void);

  virtual void register_activator (
    ::CORBA::Long return_value) = 0;

  virtual void register_activator_excep (
    ::ImplementationRepository::AMH_LocatorExceptionHolder * holder) = 0;

  virtual void unregister_activator (
    void) = 0;

  virtual void unregister_activator_excep (
    ::ImplementationRepository::AMH_LocatorExceptionHolder * holder) = 0;

  virtual void notify_child_death (
    void) = 0;

  virtual void notify_child_death_excep (
    ::ImplementationRepository::AMH_LocatorExceptionHolder * holder) = 0;

  virtual void child_death_pid (
    void) = 0;

  virtual void child_death_pid_excep (
    ::ImplementationRepository::AMH_LocatorExceptionHolder * holder) = 0;

  virtual void spawn_pid (
    void) = 0;

  virtual void spawn_pid_excep (
    ::ImplementationRepository::AMH_LocatorExceptionHolder * holder) = 0;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_LocatorResponseHandler (void);

  

  virtual ~AMH_LocatorResponseHandler (void);

private:
  // Private and unimplemented for concrete interfaces.
  AMH_LocatorResponseHandler (const AMH_LocatorResponseHandler &);

  void operator= (const AMH_LocatorResponseHandler &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_AMH_LocatorResponseHandler;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\enum_ch.cpp:44

enum UpdateType
{
  repo_update,
  repo_remove,
  access
};

typedef UpdateType &UpdateType_out;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_UpdateType;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\enum_ch.cpp:44

enum EntityType
{
  repo_activator,
  repo_server
};

typedef EntityType &EntityType_out;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_EntityType;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

struct RepoIdent;

typedef
  ::TAO_Fixed_Var_T<
      RepoIdent
    >
  RepoIdent_var;

typedef
  RepoIdent &
  RepoIdent_out;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

struct LocatorIDL_Export RepoIdent
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  
  typedef RepoIdent_var _var_type;
  typedef RepoIdent_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::CORBA::Long repo_id;
  ::CORBA::Long repo_type;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_RepoIdent;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\enum_ch.cpp:44

enum AAM_Status
{
  AAM_INIT,
  AAM_SERVER_STARTED_RUNNING,
  AAM_ACTIVATION_SENT,
  AAM_WAIT_FOR_RUNNING,
  AAM_WAIT_FOR_PING,
  AAM_WAIT_FOR_ALIVE,
  AAM_WAIT_FOR_DEATH,
  AAM_SERVER_READY,
  AAM_SERVER_DEAD,
  AAM_NOT_MANUAL,
  AAM_NO_ACTIVATOR,
  AAM_NO_COMMANDLINE,
  AAM_RETRIES_EXCEEDED,
  AAM_UPDATE_FAILED,
  AAM_ACTIVE_TERMINATE
};

typedef AAM_Status &AAM_Status_out;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_AAM_Status;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

struct RepoInfo;

typedef
  ::TAO_Fixed_Var_T<
      RepoInfo
    >
  RepoInfo_var;

typedef
  RepoInfo &
  RepoInfo_out;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

struct LocatorIDL_Export RepoInfo
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  
  typedef RepoInfo_var _var_type;
  typedef RepoInfo_out _out_type;

  static void _tao_any_destructor (void *);
  
  ImplementationRepository::EntityType kind;
  ImplementationRepository::RepoIdent repo;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_RepoInfo;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

class UpdateAction;

typedef
  ::TAO_Fixed_Var_T<
      UpdateAction
    >
  UpdateAction_var;

typedef
  UpdateAction &
  UpdateAction_out;

class LocatorIDL_Export UpdateAction
{
public:
  UpdateAction (void);
  UpdateAction (const UpdateAction &);
  ~UpdateAction (void);

  UpdateAction &operator= (const UpdateAction &);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union\discriminant_ch.cpp:67

  void _d (ImplementationRepository::UpdateType);
  ImplementationRepository::UpdateType _d (void) const;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  
  typedef UpdateAction_var _var_type;
  typedef UpdateAction_out _out_type;

  static void _tao_any_destructor (void *);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:656

  void info (const ImplementationRepository::RepoInfo &);
  const ImplementationRepository::RepoInfo &info (void) const;
  ImplementationRepository::RepoInfo &info (void);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:189

  void kind (ImplementationRepository::EntityType);
  ImplementationRepository::EntityType kind (void) const;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\public_ch.cpp:189

  void state (ImplementationRepository::AAM_Status);
  ImplementationRepository::AAM_Status state (void) const;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union\union_ch.cpp:121

  void _default (void);
private:
  ImplementationRepository::UpdateType disc_;

  union
  {
    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:519
    ImplementationRepository::RepoInfo info_;
    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:140
    ImplementationRepository::EntityType kind_;
    // TAO_IDL - Generated from
    // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union_branch\private_ch.cpp:140
    ImplementationRepository::AAM_Status state_;
  } u_;

  /// TAO extension - frees any allocated storage.
  void _reset (void);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_UpdateAction;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

struct UpdateInfo;

typedef
  ::TAO_Var_Var_T<
      UpdateInfo
    >
  UpdateInfo_var;

typedef
  ::TAO_Out_T<
      UpdateInfo
    >
  UpdateInfo_out;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

struct LocatorIDL_Export UpdateInfo
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  
  typedef UpdateInfo_var _var_type;
  typedef UpdateInfo_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::TAO::String_Manager name;
  

  ImplementationRepository::UpdateAction action;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_UpdateInfo;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\sequence_ch.cpp:99

#if !defined (_IMPLEMENTATIONREPOSITORY_UPDATEINFOSEQ_CH_)
#define _IMPLEMENTATIONREPOSITORY_UPDATEINFOSEQ_CH_

class UpdateInfoSeq;
typedef ::TAO_VarSeq_Var_T<UpdateInfoSeq> UpdateInfoSeq_var;
typedef ::TAO_Seq_Out_T<UpdateInfoSeq> UpdateInfoSeq_out;


class LocatorIDL_Export UpdateInfoSeq
  : public
      ::TAO::unbounded_value_sequence< UpdateInfo>
{
public:
  UpdateInfoSeq (void);
  UpdateInfoSeq ( ::CORBA::ULong max);
  UpdateInfoSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    UpdateInfo* buffer,
    ::CORBA::Boolean release = false);
  UpdateInfoSeq (const UpdateInfoSeq &);
  virtual ~UpdateInfoSeq (void);
  

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  
  typedef UpdateInfoSeq_var _var_type;
  typedef UpdateInfoSeq_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_UpdateInfoSeq;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ch.cpp:41

class LocatorIDL_Export InvalidPeer : public ::CORBA::UserException
{
public:
  ::TAO::String_Manager reason;

  InvalidPeer (void);
  InvalidPeer (const InvalidPeer &);
  ~InvalidPeer (void);

  InvalidPeer &operator= (const InvalidPeer &);

  static void _tao_any_destructor (void *);

  static InvalidPeer *_downcast ( ::CORBA::Exception *);
  static const InvalidPeer *_downcast ( ::CORBA::Exception const *);

  static ::CORBA::Exception *_alloc (void);

  virtual ::CORBA::Exception *_tao_duplicate (void) const;

  virtual void _raise (void) const;

  virtual void _tao_encode (TAO_OutputCDR &cdr) const;
  virtual void _tao_decode (TAO_InputCDR &cdr);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\exception_ctor.cpp:51

  InvalidPeer (
      const char * _tao_reason);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_InvalidPeer;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_UPDATEPUSHNOTIFICATION__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_UPDATEPUSHNOTIFICATION__VAR_OUT_CH_

class UpdatePushNotification;
typedef UpdatePushNotification *UpdatePushNotification_ptr;
typedef TAO_Objref_Var_T<UpdatePushNotification> UpdatePushNotification_var;
typedef TAO_Objref_Out_T<UpdatePushNotification> UpdatePushNotification_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class LocatorIDL_Export UpdatePushNotification
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<UpdatePushNotification>;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef UpdatePushNotification_ptr _ptr_type;
  typedef UpdatePushNotification_var _var_type;
  typedef UpdatePushNotification_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static UpdatePushNotification_ptr _duplicate (UpdatePushNotification_ptr obj);

  static void _tao_release (UpdatePushNotification_ptr obj);

  static UpdatePushNotification_ptr _narrow (::CORBA::Object_ptr obj);
  static UpdatePushNotification_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static UpdatePushNotification_ptr _nil (void);

  virtual void notify_update (
    ::CORBA::ULongLong seq_num,
    const ::ImplementationRepository::UpdateInfoSeq & info);

  virtual void register_replica (
    ::ImplementationRepository::UpdatePushNotification_ptr peer,
    char *& ft_imr_ior,
    ::CORBA::ULongLong_out seq_num);

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  UpdatePushNotification (void);

  // Concrete non-local interface only.
  UpdatePushNotification (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  UpdatePushNotification (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~UpdatePushNotification (void);

private:
  // Private and unimplemented for concrete interfaces.
  UpdatePushNotification (const UpdatePushNotification &);

  void operator= (const UpdatePushNotification &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_UpdatePushNotification;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:564



#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONEXCEPTIONHOLDER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONEXCEPTIONHOLDER__VAR_OUT_CH_

class AMH_UpdatePushNotificationExceptionHolder;
typedef
  TAO_Value_Var_T<
      AMH_UpdatePushNotificationExceptionHolder
    >
  AMH_UpdatePushNotificationExceptionHolder_var;

typedef
  TAO_Value_Out_T<
      AMH_UpdatePushNotificationExceptionHolder
    >
  AMH_UpdatePushNotificationExceptionHolder_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:50

class LocatorIDL_Export AMH_UpdatePushNotificationExceptionHolder
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_UpdatePushNotificationExceptionHolder * _ptr_type;
  typedef AMH_UpdatePushNotificationExceptionHolder_var _var_type;
  typedef AMH_UpdatePushNotificationExceptionHolder_out _out_type;

  static void _tao_any_destructor (void *);

  AMH_UpdatePushNotificationExceptionHolder ( ::CORBA::Exception *ex)
    : exception (ex)
  {}

  virtual ~AMH_UpdatePushNotificationExceptionHolder (void);
  virtual ::CORBA::ValueBase *_copy_value (void);

  static AMH_UpdatePushNotificationExceptionHolder* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      AMH_UpdatePushNotificationExceptionHolder *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_notify_update (void);

public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:396
  
public:
  virtual void raise_register_replica (void);

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:238

protected:
  AMH_UpdatePushNotificationExceptionHolder (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  AMH_UpdatePushNotificationExceptionHolder (const AMH_UpdatePushNotificationExceptionHolder &);
  void operator= (const AMH_UpdatePushNotificationExceptionHolder &);
  
  ::CORBA::Exception *exception;
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_UpdatePushNotificationExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_UpdatePushNotificationExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_AMH_UpdatePushNotificationExceptionHolder;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_interface.cpp:748

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONRESPONSEHANDLER__VAR_OUT_CH_)
#define _IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONRESPONSEHANDLER__VAR_OUT_CH_

class AMH_UpdatePushNotificationResponseHandler;
typedef AMH_UpdatePushNotificationResponseHandler *AMH_UpdatePushNotificationResponseHandler_ptr;
typedef TAO_Objref_Var_T<AMH_UpdatePushNotificationResponseHandler> AMH_UpdatePushNotificationResponseHandler_var;
typedef TAO_Objref_Out_T<AMH_UpdatePushNotificationResponseHandler> AMH_UpdatePushNotificationResponseHandler_out;


#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:40

class LocatorIDL_Export AMH_UpdatePushNotificationResponseHandler
  : public virtual ::CORBA::Object
{
public:

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

  typedef AMH_UpdatePushNotificationResponseHandler_ptr _ptr_type;
  typedef AMH_UpdatePushNotificationResponseHandler_var _var_type;
  typedef AMH_UpdatePushNotificationResponseHandler_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMH_UpdatePushNotificationResponseHandler_ptr _duplicate (AMH_UpdatePushNotificationResponseHandler_ptr obj);

  static void _tao_release (AMH_UpdatePushNotificationResponseHandler_ptr obj);

  static AMH_UpdatePushNotificationResponseHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMH_UpdatePushNotificationResponseHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMH_UpdatePushNotificationResponseHandler_ptr _nil (void);

  virtual void notify_update (
    void) = 0;

  virtual void notify_update_excep (
    ::ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder * holder) = 0;

  virtual void register_replica (
    const char * ft_imr_ior,
    ::CORBA::ULongLong seq_num) = 0;

  virtual void register_replica_excep (
    ::ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder * holder) = 0;

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  AMH_UpdatePushNotificationResponseHandler (void);

  

  virtual ~AMH_UpdatePushNotificationResponseHandler (void);

private:
  // Private and unimplemented for concrete interfaces.
  AMH_UpdatePushNotificationResponseHandler (const AMH_UpdatePushNotificationResponseHandler &);

  void operator= (const AMH_UpdatePushNotificationResponseHandler &);
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_typecode\typecode_decl.cpp:34

extern LocatorIDL_Export ::CORBA::TypeCode_ptr const _tc_AMH_UpdatePushNotificationResponseHandler;

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:64

} // module ImplementationRepository

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:66


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_IMPLEMENTATIONREPOSITORY_LOCATOR__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_LOCATOR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::Locator>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::Locator_ptr,
            ::ImplementationRepository::Locator_var,
            ::ImplementationRepository::Locator_out,
            TAO::Objref_Traits<ImplementationRepository::Locator>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:306

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_LOCATOREXCEPTIONHOLDER__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_LOCATOREXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ImplementationRepository::AMH_LocatorExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::AMH_LocatorExceptionHolder *,
            ::ImplementationRepository::AMH_LocatorExceptionHolder_var,
            ::ImplementationRepository::AMH_LocatorExceptionHolder_out,
            TAO::Value_Traits<ImplementationRepository::AMH_LocatorExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::ImplementationRepository::UpdateType>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::UpdateType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::ImplementationRepository::EntityType>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::EntityType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::ImplementationRepository::RepoIdent>
    : public
        Fixed_Size_Arg_Traits_T<
            ::ImplementationRepository::RepoIdent,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::ImplementationRepository::AAM_Status>
    : public
        Basic_Arg_Traits_T<
            ::ImplementationRepository::AAM_Status,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::ImplementationRepository::RepoInfo>
    : public
        Fixed_Size_Arg_Traits_T<
            ::ImplementationRepository::RepoInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:1056

  template<>
  class Arg_Traits< ::ImplementationRepository::UpdateAction>
    : public
        Fixed_Size_Arg_Traits_T<
            ::ImplementationRepository::UpdateAction,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::ImplementationRepository::UpdateInfo>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::UpdateInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::ImplementationRepository::UpdateInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::ImplementationRepository::UpdateInfoSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:145

#if !defined (_IMPLEMENTATIONREPOSITORY_UPDATEPUSHNOTIFICATION__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_UPDATEPUSHNOTIFICATION__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ImplementationRepository::UpdatePushNotification>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::UpdatePushNotification_ptr,
            ::ImplementationRepository::UpdatePushNotification_var,
            ::ImplementationRepository::UpdatePushNotification_out,
            TAO::Objref_Traits<ImplementationRepository::UpdatePushNotification>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:306

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONEXCEPTIONHOLDER__ARG_TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONEXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *,
            ::ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder_var,
            ::ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder_out,
            TAO::Value_Traits<ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\obv_module.cpp:44

namespace OBV_ImplementationRepository
{

  // TAO_IDL - Generated from
  // c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_ch.cpp:44

  // OBV_ class
  class LocatorIDL_Export AMH_LocatorExceptionHolder
    : public virtual ImplementationRepository::AMH_LocatorExceptionHolder
  {

protected:
  AMH_LocatorExceptionHolder (void);
  virtual ~AMH_LocatorExceptionHolder (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_LocatorExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_LocatorExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_ch.cpp:44

// OBV_ class
class LocatorIDL_Export AMH_UpdatePushNotificationExceptionHolder
  : public virtual ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder
{

protected:
  AMH_UpdatePushNotificationExceptionHolder (void);
  virtual ~AMH_UpdatePushNotificationExceptionHolder (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__ImplementationRepository_AMH_UpdatePushNotificationExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__ImplementationRepository_AMH_UpdatePushNotificationExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};
}

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:60


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_IMPLEMENTATIONREPOSITORY_LOCATOR__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_LOCATOR__TRAITS_

  template<>
  struct LocatorIDL_Export Objref_Traits< ::ImplementationRepository::Locator>
  {
    static ::ImplementationRepository::Locator_ptr duplicate (
        ::ImplementationRepository::Locator_ptr p);
    static void release (
        ::ImplementationRepository::Locator_ptr p);
    static ::ImplementationRepository::Locator_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::Locator_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_LOCATOREXCEPTIONHOLDER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_LOCATOREXCEPTIONHOLDER__TRAITS_

  template<>
  struct LocatorIDL_Export Value_Traits<ImplementationRepository::AMH_LocatorExceptionHolder>
  {
    static void add_ref (ImplementationRepository::AMH_LocatorExceptionHolder *);
    static void remove_ref (ImplementationRepository::AMH_LocatorExceptionHolder *);
    static void release (ImplementationRepository::AMH_LocatorExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_LOCATORRESPONSEHANDLER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_LOCATORRESPONSEHANDLER__TRAITS_

  template<>
  struct LocatorIDL_Export Objref_Traits< ::ImplementationRepository::AMH_LocatorResponseHandler>
  {
    static ::ImplementationRepository::AMH_LocatorResponseHandler_ptr duplicate (
        ::ImplementationRepository::AMH_LocatorResponseHandler_ptr p);
    static void release (
        ::ImplementationRepository::AMH_LocatorResponseHandler_ptr p);
    static ::ImplementationRepository::AMH_LocatorResponseHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::AMH_LocatorResponseHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_UPDATEPUSHNOTIFICATION__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_UPDATEPUSHNOTIFICATION__TRAITS_

  template<>
  struct LocatorIDL_Export Objref_Traits< ::ImplementationRepository::UpdatePushNotification>
  {
    static ::ImplementationRepository::UpdatePushNotification_ptr duplicate (
        ::ImplementationRepository::UpdatePushNotification_ptr p);
    static void release (
        ::ImplementationRepository::UpdatePushNotification_ptr p);
    static ::ImplementationRepository::UpdatePushNotification_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::UpdatePushNotification_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONEXCEPTIONHOLDER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONEXCEPTIONHOLDER__TRAITS_

  template<>
  struct LocatorIDL_Export Value_Traits<ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder>
  {
    static void add_ref (ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *);
    static void remove_ref (ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *);
    static void release (ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *);
  };

#endif /* end #if !defined */

#if !defined (_IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONRESPONSEHANDLER__TRAITS_)
#define _IMPLEMENTATIONREPOSITORY_AMH_UPDATEPUSHNOTIFICATIONRESPONSEHANDLER__TRAITS_

  template<>
  struct LocatorIDL_Export Objref_Traits< ::ImplementationRepository::AMH_UpdatePushNotificationResponseHandler>
  {
    static ::ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr duplicate (
        ::ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr p);
    static void release (
        ::ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr p);
    static ::ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, Locator_ptr); // copying
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, Locator_ptr *); // non-copying
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Locator_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::Locator_ptr); // copying
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::Locator_ptr *); // non-copying
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::Locator_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_LocatorExceptionHolder *); // copying
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_LocatorExceptionHolder **); // non-copying
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_LocatorExceptionHolder *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_LocatorExceptionHolder *); // copying
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_LocatorExceptionHolder **); // non-copying
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_LocatorExceptionHolder *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_LocatorResponseHandler_ptr); // copying
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_LocatorResponseHandler_ptr *); // non-copying
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_LocatorResponseHandler_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_LocatorResponseHandler_ptr); // copying
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_LocatorResponseHandler_ptr *); // non-copying
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_LocatorResponseHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::UpdateType);
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::UpdateType &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::UpdateType);
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::UpdateType &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::EntityType);
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::EntityType &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::EntityType);
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::EntityType &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::RepoIdent &); // copying version
  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::RepoIdent*); // noncopying version
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::RepoIdent *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::RepoIdent &); // copying version
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::RepoIdent*); // noncopying version
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::RepoIdent *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::AAM_Status);
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::ImplementationRepository::AAM_Status &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AAM_Status);
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AAM_Status &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::RepoInfo &); // copying version
  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::RepoInfo*); // noncopying version
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::RepoInfo *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::RepoInfo &); // copying version
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::RepoInfo*); // noncopying version
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::RepoInfo *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union\any_op_ch.cpp:37



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::UpdateAction &); // copying version
  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::UpdateAction*); // noncopying version
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::UpdateAction *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::UpdateAction &); // copying version
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::UpdateAction*); // noncopying version
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::UpdateAction *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::UpdateInfo &); // copying version
  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::UpdateInfo*); // noncopying version
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::UpdateInfo *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::UpdateInfo &); // copying version
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::UpdateInfo*); // noncopying version
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::UpdateInfo *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, const ::ImplementationRepository::UpdateInfoSeq &); // copying version
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, ::ImplementationRepository::UpdateInfoSeq*); // noncopying version
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::UpdateInfoSeq *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= ( ::CORBA::Any &, const ImplementationRepository::UpdateInfoSeq &); // copying version
LocatorIDL_Export void operator<<= ( ::CORBA::Any &, ImplementationRepository::UpdateInfoSeq*); // noncopying version
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::UpdateInfoSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\any_op_ch.cpp:38

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  

  LocatorIDL_Export void operator<<= (::CORBA::Any &, const ::ImplementationRepository::InvalidPeer &); // copying version
  LocatorIDL_Export void operator<<= (::CORBA::Any &, ::ImplementationRepository::InvalidPeer*); // noncopying version
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::ImplementationRepository::InvalidPeer *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



LocatorIDL_Export void operator<<= (::CORBA::Any &, const ImplementationRepository::InvalidPeer &); // copying version
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::InvalidPeer*); // noncopying version
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ImplementationRepository::InvalidPeer *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, UpdatePushNotification_ptr); // copying
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, UpdatePushNotification_ptr *); // non-copying
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, UpdatePushNotification_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::UpdatePushNotification_ptr); // copying
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::UpdatePushNotification_ptr *); // non-copying
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::UpdatePushNotification_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_UpdatePushNotificationExceptionHolder *); // copying
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_UpdatePushNotificationExceptionHolder **); // non-copying
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_UpdatePushNotificationExceptionHolder *&);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *); // copying
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder **); // non-copying
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *&);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ImplementationRepository
{
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_UpdatePushNotificationResponseHandler_ptr); // copying
  LocatorIDL_Export void operator<<= ( ::CORBA::Any &, AMH_UpdatePushNotificationResponseHandler_ptr *); // non-copying
  LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMH_UpdatePushNotificationResponseHandler_ptr &);
}

#else



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr); // copying
LocatorIDL_Export void operator<<= (::CORBA::Any &, ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr *); // non-copying
LocatorIDL_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ImplementationRepository::AMH_UpdatePushNotificationResponseHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:41


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::Locator_ptr );
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::Locator_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:456



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern LocatorIDL_Export void add_ref (ImplementationRepository::AMH_LocatorExceptionHolder *);
  extern LocatorIDL_Export void remove_ref (ImplementationRepository::AMH_LocatorExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\cdr_op_ch.cpp:49



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AMH_LocatorExceptionHolder *);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AMH_LocatorExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:34



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::UpdateType _tao_enumerator);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::UpdateType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:34



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::EntityType _tao_enumerator);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::EntityType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::RepoIdent &);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::RepoIdent &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_enum\cdr_op_ch.cpp:34



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, ImplementationRepository::AAM_Status _tao_enumerator);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::AAM_Status &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::RepoInfo &);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::RepoInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_union\cdr_op_ch.cpp:38



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::UpdateAction &);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::UpdateAction &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::UpdateInfo &);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::UpdateInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_sequence\cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_ImplementationRepository_UpdateInfoSeq_H_
#define _TAO_CDR_OP_ImplementationRepository_UpdateInfoSeq_H_

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


LocatorIDL_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ImplementationRepository::UpdateInfoSeq &_tao_sequence);
LocatorIDL_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ImplementationRepository::UpdateInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_ImplementationRepository_UpdateInfoSeq_H_ */

// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_exception\cdr_op_ch.cpp:37

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::InvalidPeer &);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::InvalidPeer &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:41


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::UpdatePushNotification_ptr );
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::UpdatePushNotification_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_valuetype.cpp:456



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern LocatorIDL_Export void add_ref (ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *);
  extern LocatorIDL_Export void remove_ref (ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *);
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_visitor_valuetype\cdr_op_ch.cpp:49



TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

LocatorIDL_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *);
LocatorIDL_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ImplementationRepository::AMH_UpdatePushNotificationExceptionHolder *&);

TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// c:\private\datascience\neuralna_mreza\neuralnetwork\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1686


TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "ImR_LocatorC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

